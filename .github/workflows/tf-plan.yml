name: Terraform â€¢ Plan

on:
  workflow_call:
  workflow_dispatch: {}

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  AWS_REGION: us-east-1
  TF_WORKSPACE: dev
  TF_STATE_KEY: dev/terraform.tfstate

jobs:
  plan:
    runs-on: ubuntu-latest
    concurrency:
      group: tf-plan-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4

      - name: Derive S3 bucket from branch
        id: bucket
        shell: bash
        run: |
          BRANCH="${GITHUB_HEAD_REF:-${GITHUB_REF_NAME}}"
          BRANCH_SANITIZED="$(echo "$BRANCH" \
            | tr '[:upper:]' '[:lower:]' \
            | sed -E 's#[^a-z0-9-]#-#g' | sed -E 's#-+#-#g' | sed -E 's#(^-)|(-$)##g')"
          echo "name=guestlist-tfstate-$BRANCH_SANITIZED" >> $GITHUB_OUTPUT

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform init (S3 backend)
        run: |
          terraform init -input=false \
            -backend-config="bucket=${{ steps.bucket.outputs.name }}" \
            -backend-config="key=${TF_STATE_KEY}" \
            -backend-config="region=${AWS_REGION}"

      - run: terraform workspace select "${TF_WORKSPACE}" || terraform workspace new "${TF_WORKSPACE}"
      - run: terraform plan -input=false -out=tfplan.bin
      - run: terraform show -no-color tfplan.bin > tfplan.txt
      - uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ github.run_id }}
          path: |
            tfplan.bin
            tfplan.txt
