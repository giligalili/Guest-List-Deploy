name: Terraform â€¢ Destroy

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      confirm:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      environment:
        description: "Workspace to destroy (e.g., dev)"
        type: choice
        required: true
        options: [ dev ]
      confirm:
        description: "Type EXACTLY: destroy dev"
        required: true
        type: string

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1

jobs:
  destroy:
    if: |
      (github.event_name == 'workflow_dispatch'  && inputs.confirm == 'destroy dev' && inputs.environment == 'dev') ||
      (github.event_name == 'workflow_call'       && inputs.confirm == format('destroy {0}', inputs.environment))
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4

      - name: Derive S3 bucket & key from environment
        id: bk
        shell: bash
        run: |
          BRANCH="${{ inputs.environment }}"
          BRANCH_SANITIZED="$(echo "$BRANCH" \
            | tr '[:upper:]' '[:lower:]' \
            | sed -E 's#[^a-z0-9-]#-#g' | sed -E 's#-+#-#g' | sed -E 's#(^-)|(-$)##g')"
          echo "bucket=guestlist-tfstate-$BRANCH_SANITIZED" >> $GITHUB_OUTPUT
          echo "key=${BRANCH_SANITIZED}/terraform.tfstate" >> $GITHUB_OUTPUT

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform init (S3 backend)
        run: |
          terraform init -input=false \
            -backend-config="bucket=${{ steps.bk.outputs.bucket }}" \
            -backend-config="key=${{ steps.bk.outputs.key }}" \
            -backend-config="region=${AWS_REGION}"

      - name: Select workspace
        run: terraform workspace select "${{ inputs.environment }}"

      - name: Destroy
        run: terraform destroy -auto-approve
